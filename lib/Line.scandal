// Save a breakpoint function as a table.
lambda line = array breakpoints -> int length -> {
	int samples = length * (size(breakpoints) - 1)
	array buffer = new(samples)
	int index = 0
	float value = breakpoints[0]
	float increment = 0.0
	int i = 0
	while i < size(breakpoints) - 1 {
		int j = 0
		while j < length {
			if i == size(breakpoints) - 2 {
				increment = (breakpoints[i + 1] - breakpoints[i]) / (length - 1.0)
			}
			if i != size(breakpoints) - 2 {
				increment = (breakpoints[i + 1] - breakpoints[i]) / length
			}
			buffer[index] = value
			index = index + 1
			value = value + increment
			j = j + 1
		}
		i = i + 1
	}
	return buffer
}

import("lib/Dump.scandal")
array lineTest = line([1, 2, 3, 4, 5], 2)
array dumpLineTest = dump(lineTest)