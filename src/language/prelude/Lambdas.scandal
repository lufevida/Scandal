

float:float adder = float x -> float y -> x + y
float:float add4 = float x -> adder(x, 4.0)
float:float add6 = float x -> adder(x, 6.0)
float twentyOne = add6.add4(eleven)
float:float addOutlier = float x -> x + eleven
float twelve = addOutlier(1.0)

float:float returnBlock = float x -> {
	print("I am a side-effect :-(")
	return x
}

float:float idtest = float x -> x
float:float idtest2 = float x -> idtest(x)

float:float test = float x -> float y -> float z -> x + y + z
float testApp = test(2.0, 3.0, eleven)
print(testApp)
float:float application = float x -> test(x, eleven, eleven)

/*
float:float threeArgs = float x -> float y -> float z -> x + y + z
float:float twoArgs = float x -> float y -> threeArgs(x, y, 11.1)
float:float oneArg = float x -> twoArgs(x, 22.2)
*/

float:array oscillator = float duration -> float amplitude -> float frequency -> array:float shape -> {
	int samples = floor(duration * 44100.0)
	array buffer = new(samples)
	float twoPi = 2.0 * pi
	float freq = frequency * twoPi / 44100.0
	array params = new(2)
	params[1] = freq
	int i = 0
	while i < samples {
		buffer[i] = amplitude * shape(params)
		params[0] = params[0] + freq
		if params[0] >= twoPi { params[0] = params[0] - twoPi }
		i = i + 1
	}
	return buffer
}

float:array cosineOsc = float x -> oscillator(x, 0.7, 440.0, naiveSquare)
play(cosineOsc(2.0), 1)

array:float naiveCosine = array x -> { return cos(x[0]) }

array:float naiveTriangle = array x -> {
	float phase = 1.0 - x[0] / pi
	if phase < 0.0 { phase = -phase }
	return 2.0 * phase - 1.0
}

array:float naiveSawtooth = array x -> {
	return 2.0 * (1.0 - x[0] / (2.0 * pi)) - 1.0
}

array:float naiveSquare = array x -> {
	float phase = 1.0
	if x[0] >= pi { phase = -phase }
	return phase
}

import("doc/Prelude.scandal")

array lisa = read("doc/monoLisa.wav", mono)
float samples = 88200.0
array:array aLine = array x -> line(x, samples)
array:array aFadeIn = array x -> fadeIn(x, aLine([0, 1]))
array:array aFadeOut = array x -> fadeOut(x, aLine([1, 0]))
array:array aCrossFade = array x -> crossFade(x, lisa, aFadeIn, aFadeOut, samples)
array crossedLisa = aCrossFade(lisa)
play(crossedLisa, mono)

string name = "mower.wav"

array samples = read(name, mono)

samples = loop(samples, 4 * 44100, 5 * 44100, 1)

write(samples, "mower_short.wav", mono)

play(read("mower_short.wav", mono), mono)

string devices = info
print(devices)

array lisa = read("doc/monoLisa.wav", 1)
plot("A Scandalous Sound File", lisa, 1000)

array recording
print("Recording...")
recording = record(3000)
print("Playing...")
play(recording, mono)
write(recording, "test.wav", mono)


