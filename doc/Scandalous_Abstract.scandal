
array:float max = array x -> {
	float m = x[0]
	int i = 0
	while i < size(x) {
		if m < x[i] { m = x[i] }
		i = i + 1
	}
	return m
}

array:array scale = array x -> array:float function -> {
	float scalar = function(x)
	int i = 0
	while i < size(x) {
		x[i] = x[i] * scalar
		i = i + 1
	}
	return x
}

array:float inverseArrayFloat = array x -> array:float function -> 1 / function(x)

array:float inverseMax = array x -> inverseArrayFloat(x, max)

array:array normalize = array x -> scale(x, inverseMax)

array:array mix = array first -> array second -> {
	int samples = size(first)
	if size(second) < size(first) { samples = size(second) }
	array buffer = new(samples)
	int i = 0
	while i < samples {
		buffer[i] = first[i] + second[i]
		i = i + 1
	}
	return buffer
}

array:array loop = array start -> float tail -> float bars -> float:float barsToSamples -> {
	int samples = size(start) + floor(barsToSamples(bars))
	array buffer = new(samples)
	int i = 0
	int offset = floor(barsToSamples(tail))
	int j = size(start)
	while i < size(start) {
		buffer[i] = start[i]
		i = i + 1
	}
	while i < samples {
		buffer[i] = buffer[j - offset]
		i = i + 1
		j = j + 1
	}
	return buffer
}

array:array fill = array start -> float index -> {
	array loop = new(index)
	if floor(index) == 0 { loop = read("samples/bass8.wav", 1) }
	if floor(index) == 1 { loop = read("samples/kick8.wav", 1) }
	if floor(index) == 2 { loop = read("samples/snare8.wav", 1) }
	if floor(index) == 3 { loop = read("samples/shaker8.wav", 1) }
	if floor(index) == 4 { loop = read("samples/clap4.wav", 1) }
	if floor(index) == 5 { loop = read("samples/roll8.wav", 1) }
	if floor(index) == 6 { loop = read("samples/hihat8.wav", 1) }
	if floor(index) == 7 { loop = read("samples/hihat8-2.wav", 1) }
	if floor(index) == 8 { loop = read("samples/fx2.wav", 1) }
	if floor(index) == 9 { loop = read("samples/noise4.wav", 1) }
	if floor(index) == 10 { loop = read("samples/pad8.wav", 1) }
	if floor(index) == 11 { loop = read("samples/pulse8.wav", 1) }
	if floor(index) == 12 { loop = read("samples/flute8.wav", 1) }
	if floor(index) == 13 { loop = read("samples/vox8.wav", 1) }
	int samples = size(start) + size(loop)
	array buffer = new(samples)
	int i = 0
	while i < size(start) {
		buffer[i] = start[i]
		i = i + 1
	}
	while i < samples {
		buffer[i] = loop[i - size(start)]
		i = i + 1
	}
	return buffer
}
